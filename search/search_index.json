{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"HDA testing script This repository contains automated testing scripts designed to monitor and verify the quality and availability of data from the HDA and Wekeo Purpose The primary focus of these tests is not to validate the functionalities of the HDA commands themselves, but rather to: Ensure that datasets listed are available Ensure that the retrieval metadata are coherent Ensure that downloading and access speed Current Tests The initial suite of tests includes: Checks of metadata Check of data querying Feedback and Contributions Your questions, feedback, and suggestions are highly welcome! Please reach out to: Guillaume Koenig Email: gkoenig@mercator-ocean.fr Feel free to use, modify, and share these scripts under an open, collaborative spirit.","title":"Home"},{"location":"#hda-testing-script","text":"This repository contains automated testing scripts designed to monitor and verify the quality and availability of data from the HDA and Wekeo","title":"HDA testing script"},{"location":"#purpose","text":"The primary focus of these tests is not to validate the functionalities of the HDA commands themselves, but rather to: Ensure that datasets listed are available Ensure that the retrieval metadata are coherent Ensure that downloading and access speed","title":"Purpose"},{"location":"#current-tests","text":"The initial suite of tests includes: Checks of metadata Check of data querying","title":"Current Tests"},{"location":"#feedback-and-contributions","text":"Your questions, feedback, and suggestions are highly welcome! Please reach out to: Guillaume Koenig Email: gkoenig@mercator-ocean.fr Feel free to use, modify, and share these scripts under an open, collaborative spirit.","title":"Feedback and Contributions"},{"location":"further_developments/","text":"Further Development Planned Features Test of downloading and not just querying data Automated delivery of test results via email notifications Set up of a database for storing results Automation of the scripts via crontab Setting up a dashboard for observations of results","title":"Further Development"},{"location":"further_developments/#further-development","text":"","title":"Further Development"},{"location":"further_developments/#planned-features","text":"Test of downloading and not just querying data Automated delivery of test results via email notifications Set up of a database for storing results Automation of the scripts via crontab Setting up a dashboard for observations of results","title":"Planned Features"},{"location":"usage/","text":"Usage Most of the scripts can be run independently. To run a script: python script_name.py Scripts Overview main.py Retrieves a list of datasets with their metadata and attempts to build a query and do a search on them. Stores the results of accessibility in a csv file in the \"data\" directory. metadata_check Retrieves a list of datasets and try to access their metadata. Stores the results in a csv file in the \"data\" directory. Login The script_to_markdown script requires login to github.","title":"Usage"},{"location":"usage/#usage","text":"Most of the scripts can be run independently. To run a script: python script_name.py","title":"Usage"},{"location":"usage/#scripts-overview","text":"main.py Retrieves a list of datasets with their metadata and attempts to build a query and do a search on them. Stores the results of accessibility in a csv file in the \"data\" directory. metadata_check Retrieves a list of datasets and try to access their metadata. Stores the results in a csv file in the \"data\" directory.","title":"Scripts Overview"},{"location":"usage/#login","text":"The script_to_markdown script requires login to github.","title":"Login"}]}